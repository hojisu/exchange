
# coding: utf-8

# In[ ]:


get_ipython().run_cell_magic('writefile', 'exchange/exchange.py', '\n# TODO\nimport requests\nimport pandas as pd\nfrom fake_useragent import UserAgent\nfrom sqlalchemy import *\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy.ext.declarative import declarative_base\n\ndef daum_exchanges():\n    \n    url = "https://finance.daum.net/api/exchanges/summaries"\n    headers = {\'User-Agent\' : UserAgent().chrome,\n               \'referer\' : "https://finance.daum.net/exchanges"}\n    response = requests.get(url, headers=headers)\n    data = response.json()\n    result = data["data"]\n    columns = [\'country\', \'currencyName\', \'basePrice\', \'change\',\'changePrice\', \'cashBuyingPrice\', \'cashSellingPrice\']\n    df = pd.DataFrame(result)[columns]\n    df[\'change\'] = df[\'change\'].apply(lambda data: "-" if data == \'FALL\' else "+")\n    df[\'changePrice\'] = df[\'change\'] + df[\'changePrice\'].astype(str)\n    df.drop(columns=\'change\', inplace=True)\n    \n    return df\n\nbase = declarative_base()\n\nclass ExchangeDaum(base):\n    __tablename__ = "daum"\n    \n    id = Column(Integer, primary_key=True)\n    country = Column(String(50), nullable=False)\n    currencyName = Column(String(10), nullable=False)\n    basePrice = Column(Float, nullable=False)\n    changePrice = Column(Float, nullable=False)    \n    cashBuyingPrice = Column(Float, nullable=False)    \n    cashSellingPrice = Column(Float, nullable=False) \n    rdate = Column(TIMESTAMP, nullable=False)\n\n    def __init__(self, country, currencyName, basePrice, changePrice, cashBuyingPrice, cashSellingPrice):\n        self.country = country\n        self.currencyName = currencyName\n        self.basePrice = basePrice\n        self.changePrice = changePrice  \n        self.cashBuyingPrice = cashBuyingPrice  \n        self.cashSellingPrice = cashSellingPrice\n    \n    def __repr__(self):\n        return "<ExchangeDaum country:{}, currencyName:{}, basePrice:{},\\\nchangePrice:{}, cashBuyingPrice:{}, cashSellingPrice:{}".format(\n            self.country, self.currencyName, self.basePrice, \n            self.changePrice, self.cashBuyingPrice, self.cashSellingPrice,\n        )\n    \nclass SaveDatabase:\n\n    def __init__(self, base, df, ip="52.78.124.238", pw="dssf", database="exchange"):\n        self.mysql_client = create_engine("mysql://root:{}@{}/{}?charset=utf8".format(pw, ip,database))\n        self.datas = df.to_dict(\'records\')\n        self.base = base\n    \n    def mysql_save(self):\n        \n        # make table\n        self.base.metadata.create_all(self.mysql_client)\n        \n        # parsing daum_exchanges\n        results = [ExchangeDaum(**data) for data in df.to_dict(\'records\')]\n\n        # make session\n        maker = sessionmaker(bind=self.mysql_client)\n        session = maker()\n\n        # save datas\n        session.add_all(results)\n        session.commit()\n\n        # close session\n        session.close()\n        \n        print(\'saved!\')\n    \n\n# crawling datas\ndf = daum_exchanges()\n\n# make save database object\nsd = SaveDatabase(base, df)\n\n# save database\nsd.mysql_save()')

